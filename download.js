const download = require('download');

const st3keyArray = [
  // 'DE92B63882FC23219A2B184A1CDE6B60',
  // '7D55F3CA3E0D52D2FAE2E71B5154D9B4',
  // '21422DD6E2B68EFF0A983860B254F9BB',
  // '16082B10F7D11ADE96376C3AF16BFDFC',
  // '1D60712A935009FEBCA7C47386159429',
  // '0B7B4735404EA3FCEC3DE57DA088EADF',
  // '56577D50686712FC9EFEBA640C6F9F05',
  // '0AF81409FF412296161ED594EA28DC3C',
  // '4E9A0794D87154E6D449F1DFF538B1C9',
  // '380D582668322416483D524EF54474C3',
  // 'C8804F22E9961168305FD357741ABE90',
  // '17D008F8352BB085E52FB282541AA40B',
  // '9C0DB190FF318F36831ECB21160CBBE0',
  // '8A337C319129060B4C6216E4FC37665F',
  // '2DC6D4F7615CE224440475B12D5A1D90',
  // '9547BC99633B7DD9BD2DB626D2F02DDD',
  // 'A79163928D8786D4FB5BA3C2E8A44AA6',
  // '265D9192E51F094929734386070C0CBB',
  // '68C7F5D94F999BFC0E50FA3285A675C5',
  // '26D17CF6294BBEFC49D77DE0525B9607',
  // '51F321789E54F6F8D431CD946F4433F6',
  // '74C17D05F52B74850FF064791BFFE33C',
  // '0D44CC30D7D3C2DBE72255408EA20025',
  // '48EEE514BDA7A84D68933A0C73355978',
  // '91F7B3F53B126EA092CABCA78D04E15C',
  // 'X6Wke0b4RsWrM3MgKYXY5Jk4',
  // 'B61D4EE00D09103E2A7F8E4569C91555',
  // '17C758F2C47CC2024F228DD35A2A510F',
  // '9925BF2D277664A1CBFFEE1AD86E6FDA',
  // '3C4A0F40CA99D538C6BF1F5E1DE0B466',
  // '79B768FDF07B2FA0EA5D2DC85A8140F0',
  // 'A9997A7248C35007C8047597ED080B26',
  // '25ToFPHlIzKErH4fMs7gdCOR',
  // '68D302CC3DC2875DCB8529A21942B2DA',
  // '2AmOPfbkqOtfW7kleRJh3ZvJ',
  // '3B3103A208583CD1188C45033DC3731C',
  // 'XJCLG2HXGojcHGbDHGPggRam',
  // '93DCA6A3EF5B75F7432C2326C432BFB4',
  // '5C1DBF13F17D3AEDB674222C3E5CEC75',
  // '5C519A751E3090A58294A8C6F4E68FE7',
  // 'Pvk0Vx3Pv8COBuB3gEUZTX6I',
  // 'oVMP04ja8jkNdhVXlwoW1Ywv',
  // '08754213900435E60CDD13CCF87AB68C',
  // '4ECF8E23F678FBC1700F3DAEECFBF20B',
  // '33B538EC30D2BE23D0E693FB626D7D42',
  // '2D76C8A87891733E1732586FEABBB73B',
  // 'Ne5p1RteWrnPe4dCvTGPAJw7',
  // 'DE30DE4A98B560E397F0888EF9043E0E',
  // '06063F09530B56A703218AA9B3026107',
  // '7EC2E014152A014FDB2F69DB81A10B88',
  // 'A9C0D773E6419EEF1EE63B9A5C12EBB2',
  // '05E009B6168924DE22D39022D5C424C7',
  // 'B816C7CCD233049A5EEA7A864CD4A3A9',
  // '240FCD13ABEA3DAAB8FA6D7436A04CAC',
  // 'AAC3C1E0DB6603FCBEEAD664318BE34B',
  // 'tMiO1GNRzSNsMOFVWlyql2yt',
  // 'TwpzABjs0OI7FCFReLKDtccx',
  // '7A7840D489918A9CBBA52626D4EDCAD4',
  // '08700AE4B2E06595AB4602A474129AE3',
  // '1B695661D5993D2B96947705CA7C926E',
  // '933F81ED5DAF317D73C6393EA07A47F3',
  // '04484D275F946CA010DA769C12C47779',
  // 'E6AF4FA09E3B286541ED3E8FE9C78527',
  // '1100C189788FA4AF537C14BB6DA25356',
  // '145294103A490916B97269D05906C8BF',
  // 'wxBeY2pK3rNzNXhjnZUHi00l',
  // '292C2D56C81F92E68F7571CAFF1E908A',
  // 'D1C4159807C4D10CA509F65F3B78C04D',
  // 'F0211C11183B866CF5D54B5FD2975D8C',
  // 'E0550792CD5829B6C575D24D120F1DD2',
  // 'tkZXSdcwvSdOQiQLLv2Weqb2',
  // '5600E8B4CF4F5B12D7B9F448B768D04E',
  // '857E5919E159AC4B0F0AF18E1AE41D05',
  // '7F8284A6A6BD02964A6734BDAD06A469',
  // '4N7ZeyEKZyfye0GhXQC7xMbs',
  // '9B22BA58D0FAA958FE1FD5635995086F',
  // 'C2AB280AD726359AEFB8C6B76B5AE181',
  // '83A381638BC1E4ED6421D52479B64331',
  // 'aHVxKKpiI3Mam6TZpqM0mS9W',
  // '62D70BFB6214DE8DE8579D1E93B9B185',
  // 'DE9FFA8EBEF8152114CE1DF63D907803',
  // '9756B8B5C52428AA0112D919ED78D570',
  // '03827A1D9984B41ACC4713142F987A9C',
  // '4qDtjgu8Orqo4bHwfC4rdoiw',
  // 'Uk00gAwdohLixxTrdbhsz3UW',
  // 'QJzrYpy9OT49daFWlDDjQMOQ',
  // '73911C97166EBFE7269A744F3AEB3BFD',
  // 'E7EB62A80BF7959384E0C73045CCA0F3',
  // '3BF0A28AD0001F2C9254889BFE6F0CCF',
  // '2D02A1F1ED17F07AA5B4A395AA43E098',
  // '442CE47617E53A0CCD3F585D8EBA1134',
  // 'ADA1212E780F2BEFB8ABB60642C9C3A9',
  // '1E9863605578C734553476FB97D1F260',
  // 'CCAB3FD15C9555B9661B3A28C4121B0A',
  // 'iiBTXnO6NIlYPEnwg7GFIouE',
  // 'Mc21RaU901OFISpT2U7ju29E',
  // 'aHg8JgubNqNwvLvQSX1OfnSn',
  // '94386B9799B451D5A03E196C55649630',
  // '52B925865F9514AEECF9C37F29727550',
  // '1DC7E3E3A787596D41063E33F4E40786',
  // '590CD80862D60DED1466709951CDE75F',
  // 'jsRR9WpDuFtKRZVidrbMqNU6',
  // 'A37A402C6E148EFFA6072DF177D3A0D6',
  // '160C685B59711A9D7D2EA14B752D0F41',
  // '305507E0D42276A90D71418471910A2E',
  // '7B02A51C5479508C32EBB44CE82A2237',
  // '1643FD082D8336DB853478D2028D248E',
  // 'FACF59399BC5DDE7E74E6BE202A9749B',
  // 'CD582583B351FE6BD157BBC48FD8ECD1',
  // '9kR5WnklPDq6WbEcnt7SBETz',
  // '2D3F7255DCAE6377DA9316ECF1D78A0D',
  // '874B0E1FDAAB404C2E8529AFEC79F084',
  // '64DE7A3A95B4051913130DF437C64AB9',
  // 'URglN6WHLPBFkDWpl5N9951d',
  // '8F1DD71E219D2BABC7F31CFCCE59D93C',
  // 'jhge6bim2Mn1XgTyYb6CswtJ',
  // 'iDoVVSoZUEnOn549fF2fAOBC',
  // '3lzFQ2GaaiYSk9X5Cmb7iAgA',
  // '5FDE28ACCB310EAD7DD525DB05EEF7C9',
  // 'C7D321899A0423A7D0B4D5283E665B5B',
  // '6749C71C311C999966B2C5DC6D7CCBB9',
  // '84F446F330F6215F48ACE42408D22628',
  // '0A460C206B84FC01136F008163B906C3',
  // '20nDShAWXWw9LvEA2du2MJWF',
  // 'nEdi7U00T98opLXanKMnapXm',
  // '2736A4D05ACDFB94DAC29E6F664A5A0E',
  // '873651264F91738196DF09540FFFF0B9',
  // 'AAA320588899EB845495ADF80C1A42F2',
  // 'B739D1B254F44CA8E74CFFF2D8CE764B',
  'aIKIJB5JzAb58hmKfSIH5jh8',
  '6T0y6Fqi4uIXN4MwALEqyBgX',
  '7FCC826D643EB5BEE2FC234500FC03DA',
  'C3CFA0A043CC37253D42397785226780',
  '94F2514CA5626B82AFBB11E3FF7D25C6',
  'd4Az3iwicnpdNy05youWtVcS',
  '663E3A1C0D6A98291D2D320B6623364C',
  'BQ1pBFqDrI6TiWMrk7rC5zoE',
  '6CB47BC23C624A2F3377EC659918EC35',
  'p5uSLwgOY4b7bsOQ2N3Ss3ra',
  'B192F2479F027DE58A32035566BE45B0',
  '60E8E44A7493174D4A612430057798EB',
  '9A057B3837B81124CB2ACA04415C88EC',
  '7CD3E78DFAD2F8AD1286729D988ED436',
  'A55F08E05158EE6CA7A3E1405F10A730',
  '3562C167CCE3A14602C435FCE8773602',
  '24F7E885CA93468E852569C7F7E80E12',
  'A697ED7516F7DA726E5B8C6145D0726D',
  'F117564418285C57FDFBDAE92F70D440',
  '9F8BA3155E9CF2EF64F8F1F003A9D6BF',
  '9CFCD1EF7B69422E67C094CE9EFF5B97',
  '1998359DE8AC1046928F49AB9CAB4B70',
  '12753127FF7238C950A1291A693D7CDF',
  '9D512D060CF7BE2C880C30E91D6C45BC',
  'E53348DC7253CA4C647A533CC1A3CFB5',
  '205D976F5E3FDB04E28C261B4D40B8EE',
  'EBAC98615F7D91A16F175AC120E75E87',
  '1AA0177EABF9ABD5132BD301383C3AFB',
  'UdqUCJ0OD7hZJjy9PDKFdXPy',
  '12D5864D3F85A3A64BF2C99A53B2CA11',
  'A60E3F29CE06BD80B333EFD47B1DFED4',
  'KZse0p3LuGWDv9xUKzRAlZ8x',
  'AC6558C6541775D0EC6C3D12770C8336',
  '7E14761D17F5D33ECB4C5D2F6BF9DB0D',
  '4C2334CFA24122705394E44E2DBB66EF',
  '792F0D031DD7201CB75C248048D4F7D3',
  '1A0159BCFE773CC00545CD2CAE17EAC9',
  '1DDE52D54F5AE7BB4418ABA2ABB5C677',
  '4BD8A3EB704E9CF72CE2144B263EB85F',
  '52AF9E1B3173CEB87FA6452F0456549E',
  '0752742F91D481937122A2F359665E26',
  '54A9825E90738321F413800C0ECBF9DF',
  'F8F049654F0FEE3C1B2C56D8C8BF559E',
  '1D7E91348AF6B03077CDF9C6B456A4FA',
  '31B56D8CF9A3D13CE0A1498BB22543A4',
  'CNmnwpD0af24dpbuTQHnb8hD',
  '935AC4A4EAE5145434D3E24A73F7762F',
  '77A39900C79377C6E4E4B7183E73C1DF',
  '250584656ADB65F9D1CBAA8A64A717B7',
  'FA9B30CA95C7DE5254579E5788F60C8E',
  '6F604D6BF9BC84E959516E3986E84BA4',
  '0CB9B2047CCC3E4BF1A481AF78F4B7E1',
  '9B5E2669846091DF9732488C0B19050F',
  'dxh3kYgdquj6tXe7Up0oiWb2',
  '2EE8CB1DDD66FE769F28C8B1B7FB6DFC',
  'A905DBBEFC5504D47067EA9DAF072F25',
  'D20B264D5AB584A68E036451E87AC308',
  'B17112EB29E35D73B874F5DCAD16FD1C',
  '8AE3D8C39616D04045F8BB7FE3AB6838',
  '76DA8B71726BE1A6C2DC4D4D7FC8C52F',
  'iEfClIIDwvplqfqL6HfgS90k',
  'E7v5Adem9csEz6VQSkxhdniL',
  '59490B6D7EA191E4633AF0B806DC5623',
  '0DB7CD45C2F7B68874B083A05BD4DA62',
  '10315DCB4370A30A409B176B10570FB8',
  '295880AAC223AB5781844DCA5FE130A0',
  'B592672226BB9907F5949139D3F1FDA3',
  '347A062D6F99C4D0AC1E9EC735EB89EA',
  'Kj5VrrTRXJ1Yrb9mzumbMYIm',
  '92d603e6480d56ee027ef75f421f6601',
];

async function downloadWithRetry(file, retries = 3) {
  for (let i = 0; i < retries; i++) {
    try {
      await download(
        `https://d1txs74qdv0iht.cloudfront.net/presets/${file}.json`,
        './presets'
      );
      console.log(`Downloaded: ${file}`);
      break; // Break the loop if download is successful
    } catch (error) {
      console.error(
        `Failed to download ${file}, attempt ${i + 1}/${retries}: ${
          error.message
        }`
      );
      if (i === retries - 1) throw error;
    }
  }
}

(async () => {
  try {
    await Promise.all(st3keyArray.map((file) => downloadWithRetry(file)));
    console.log('All files downloaded successfully');
  } catch (error) {
    console.error('Some files failed to download:', error);
  }
})();
